<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutPage" xml:space="preserve">
    <value>About application</value>
  </data>
  <data name="AcceptButton" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="ADPPage" xml:space="preserve">
    <value>Policy and EULA</value>
  </data>
  <data name="AppPage" xml:space="preserve">
    <value>App webpage</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CertNameHelp" xml:space="preserve">
    <value>Enter the name of certificate’s owner.

WARNING! This name cannot be changed without the application reinstallation. Please, enter the name accurately (not less than 3 letters). This information will not leave this device</value>
  </data>
  <data name="CommunitySelect" xml:space="preserve">
    <value>Select community:</value>
  </data>
  <data name="CommunityTG" xml:space="preserve">
    <value>FDL in Telegram</value>
  </data>
  <data name="CommunityVK" xml:space="preserve">
    <value>FDL on VK.com</value>
  </data>
  <data name="CommunityWelcome" xml:space="preserve">
    <value>Welcome page</value>
  </data>
  <data name="ConnectionLost" xml:space="preserve">
    <value>WiFi connection is unavailable. Generation has been interrupted</value>
  </data>
  <data name="DeclineButton" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="DevMessage" xml:space="preserve">
    <value>By sending a letter to the developer, you de-anonymize your E-mail!

In addition, your results will be included in the draft letter. Don't forget to delete them if you don't plan on sharing them.

Do you want to continue?</value>
  </data>
  <data name="DevPage" xml:space="preserve">
    <value>Ask developer</value>
  </data>
  <data name="EmailsAreUnavailable" xml:space="preserve">
    <value>This device has no mail agent</value>
  </data>
  <data name="GettingSentence" xml:space="preserve">
    <value>Your companion is typing...</value>
  </data>
  <data name="HiResults" xml:space="preserve">
    <value>Extraordinary results:</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>Hello again. As you already understood, this is an unusual application. Its task is to discover and mathematically confirm some paranormal activity. Yes, there is a theory that describes a very specific mechanism for registering such events, which we suggest you test.


In short:

• the theory suggests that brain activity (primarily emotional) can distort the electromagnetic fields existing around us;

• generators of random numbers (PRNG) working on the basis of such fields can perceive these distortions, which will affect the results of their work. Moreover, due to the complexity of the generation algorithm, such an effect is difficult to fake;

• registration of PRNG readings for some time can show significant deviations from the norm and link them to any events.


This application uses the strength of WiFi signal or the entropy of operating system kernel (“noise” of the processor and timer, fluctuations in the speed of network packets and core temperature) as an indicator of severe disturbances in surrounding electromagnetic field. Based on them, it generates a series of random numbers.


Normally, the average value in such series should be close to the middle of range of possible values (you will see it on the slider). The app will catch and accumulate major deviations from the middle, noting when they occurred. This will help you understand if you see some paranormal activity right now.


Please note that this method is experimental! It is close to scientific, but it is not. Moreover, it has not yet been tested for the reliability of the results (if at all possible). Therefore, for the purity of the experiment:

• start generation, being in the area where serious interruptions and interference are not expected. Also this means the absence of extraneous aggressive radiation;

• do not take the results (especially the first ones) as the ultimate truth and do not react to them too emotionally;

• do not try to use violence against your device – it will do nothing but break it;

• share the results with colleagues and friends (the app has a built-in function) to understand the correctness / incorrectness of the testing method.


In the current form of the method, an absence of positive results doesn’t mean anything. However, their presence relatively reliably shows some complex distortion of electromagnetic field, which, even after the generation algorithm, leaves a trace in its operation. That is, your (or somebody’s, or something’s) ability to influence it.


The test can be considered successfully passed if the slider is shifted to the right by a noticeable distance (the scale will change its color to orange) for three or more seconds in a row. This can happen as a result of a high degree of concentration on it, and under the influence of strong emotions of a person who is near the device. Try different options – one of them may give the desired effect.


In general, go for it! We really have no idea what the results of this experiment will be. Therefore, we hope for your feedback (comments on improving the method, results obtained, suggestions and bug reports) and maximum participation. Good luck!


Swipe this screen to the right to start the experiment</value>
  </data>
  <data name="KernelMethod" xml:space="preserve">
    <value>Kernel: </value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>Interface language:</value>
  </data>
  <data name="ManualPage" xml:space="preserve">
    <value>User videoguide</value>
  </data>
  <data name="MethodCore" xml:space="preserve">
    <value>Method based on OS kernel entropy</value>
  </data>
  <data name="MethodPage" xml:space="preserve">
    <value>Complete description</value>
  </data>
  <data name="MethodSelect" xml:space="preserve">
    <value>Select random number generation method:</value>
  </data>
  <data name="MethodWiFi" xml:space="preserve">
    <value>Default method based on WiFi signal</value>
  </data>
  <data name="NextButton" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="PolicyMessage" xml:space="preserve">
    <value>Before you can start using this tool, you must accept Application development policy and EULA. Do you want to open them in browser?

• Click “Accept” if you are already familiar and fully accepted them;
• Click “Read” if you want to open them in browser;
• To decline them, close the application</value>
  </data>
  <data name="RestartApp" xml:space="preserve">
    <value>Restart the application</value>
  </data>
  <data name="SaveFileFailure" xml:space="preserve">
    <value>Failed to save certificate. Allow the application to write to device storage and try again</value>
  </data>
  <data name="SaveFileSuccess" xml:space="preserve">
    <value>The certificate is saved in downloads folder</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select language:</value>
  </data>
  <data name="SolutionPage" xml:space="preserve">
    <value>Give me a sign</value>
  </data>
  <data name="StartingGeneration" xml:space="preserve">
    <value>Starting the generation...</value>
  </data>
  <data name="Tip00" xml:space="preserve">
    <value>Welcome to the paranormal activity search tool!

Please read the description and explanations on this page of the app before starting for a better understanding of how the tool works and the essence of the experiment</value>
  </data>
  <data name="Tip01" xml:space="preserve">
    <value>Congratulations! It looks like you have found some paranormal activity!

Now you can get a certificate confirming this – the corresponding button is available at the bottom of this screen. However, to exclude a possible accidental triggering, we recommend continuing to participate in the experiment to increase the reliability of your result. All new events will also be added to your certificate</value>
  </data>
  <data name="Tip02" xml:space="preserve">
    <value>Attention! Most of messages in the new “Talk to me” section will most likely not make sense. This is fine. We’re only interested in those cases where the answers show signs of intelligence or – more likely – the characteristic features of communication on the part of the “interlocutor”</value>
  </data>
  <data name="TTM1Page" xml:space="preserve">
    <value>Talk to me</value>
  </data>
  <data name="TTM2Page" xml:space="preserve">
    <value>Show me the hidden</value>
  </data>
  <data name="WebIsUnavailable" xml:space="preserve">
    <value>This device has no web browser</value>
  </data>
  <data name="WiFiMethod" xml:space="preserve">
    <value>WiFi: </value>
  </data>
</root>